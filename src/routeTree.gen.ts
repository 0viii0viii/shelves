/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodoIndexRouteImport } from './routes/todo/index'
import { Route as NoteIndexRouteImport } from './routes/note/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIndexRoute = TodoIndexRouteImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRouteImport,
} as any)
const NoteIndexRoute = NoteIndexRouteImport.update({
  id: '/note/',
  path: '/note/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/note': typeof NoteIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/note': typeof NoteIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/note/': typeof NoteIndexRoute
  '/todo/': typeof TodoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/sign-up' | '/note' | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/sign-up' | '/note' | '/todo'
  id: '__root__' | '/' | '/sign-in' | '/sign-up' | '/note/' | '/todo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  NoteIndexRoute: typeof NoteIndexRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/note/': {
      id: '/note/'
      path: '/note'
      fullPath: '/note'
      preLoaderRoute: typeof NoteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  NoteIndexRoute: NoteIndexRoute,
  TodoIndexRoute: TodoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
