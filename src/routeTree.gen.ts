/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as MemoRouteImport } from './routes/memo'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as TodoIndexRouteImport } from './routes/todo/index'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const MemoRoute = MemoRouteImport.update({
  id: '/memo',
  path: '/memo',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIndexRoute = TodoIndexRouteImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/memo': typeof MemoRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesByTo {
  '/memo': typeof MemoRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/memo': typeof MemoRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/todo/': typeof TodoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/memo' | '/sign-in' | '/sign-up' | '/' | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to: '/memo' | '/sign-in' | '/sign-up' | '/' | '/todo'
  id:
    | '__root__'
    | '/_authenticated'
    | '/memo'
    | '/sign-in'
    | '/sign-up'
    | '/_authenticated/'
    | '/todo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  MemoRoute: typeof MemoRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/memo': {
      id: '/memo'
      path: '/memo'
      fullPath: '/memo'
      preLoaderRoute: typeof MemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  MemoRoute: MemoRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  TodoIndexRoute: TodoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
