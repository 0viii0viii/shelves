name: Build Tauri App

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src

      - name: Install Rust targets
        run: |
          rustup target add x86_64-pc-windows-msvc
          rustup target add aarch64-apple-darwin

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Tauri CLI
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/tauri-cli
            ~/.cache/tauri/
          key: ${{ runner.os }}-tauri-cli-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-tauri-cli-

      - name: Install system dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install -y sqlite

      - name: Install system dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install sqlite
          # macOS 빌드에 필요한 추가 도구들
          brew install create-dmg

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: pnpm build

      - name: Build Tauri app (macOS)
        if: matrix.platform == 'macos-latest'
        env:
          CARGO_BUILD_JOBS: 4
          RUSTFLAGS: "-C target-cpu=native"
        run: |
          # macOS 빌드 환경 설정
          export MACOSX_DEPLOYMENT_TARGET=10.15
          # 코드 서명 없이 빌드 (개발용)
          pnpm tauri build --config '{"bundle":{"macOS":{"signingIdentity":null,"hardenedRuntime":false}}}'

      - name: Build Tauri app (Windows)
        if: matrix.platform == 'windows-latest'
        env:
          CARGO_BUILD_JOBS: 4
          RUSTFLAGS: "-C target-cpu=native"
        run: pnpm tauri build

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: shelves-macos
          path: |
            src-tauri/target/release/bundle/dmg/
            src-tauri/target/release/bundle/macos/

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: shelves-windows
          path: src-tauri/target/release/bundle/
